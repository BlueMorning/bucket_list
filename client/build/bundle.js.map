{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/src/views/countries_select_view.js","webpack:///./client/src/models/country_list.js","webpack:///./client/src/views/country_detailed_view.js","webpack:///./client/src/views/bucket_list_view.js","webpack:///./client/src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","CountrySelectView","selectElement","this","onChange","undefined","countries","addEventListener","e","index","target","selectedIndex","country","bind","render","innerHTML","forEach","addOption","option","document","createElement","text","appendChild","setSelectedIndex","CountryList","url","onUpdate","populate","request","XMLHttpRequest","open","onload","status","jsonString","responseText","JSON","parse","send","addCountry","push","setRequestHeader","stringify","CountryDetailView","element","onAdd","console","log","tags","querySelectorAll","innerText","population","capital","querySelector","BucketListView","listElement","addItem","li","CountriesSelectView","countriesSelectView","countryDetailView","bucketListView","world","bucketList"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const CountrySelectView = function(selectElement) {\n  this.selectElement = selectElement;\n  this.onChange = undefined;\n  this.countries = [];\n  this.selectElement.addEventListener('change', function (e) {\n      const target = e.target;\n      const index = target.selectedIndex;\n      const country = this.countries[index];\n      this.onChange(country);\n  }.bind(this), false);\n};\n\nCountrySelectView.prototype.render = function(countries){\n    this.selectElement.innerHTML = \"\";\n    this.countries = countries;\n    this.countries.forEach(function(country, index) {\n      country.index = index;\n      this.addOption(country, index);\n    }.bind(this));\n}\n\nCountrySelectView.prototype.addOption = function(country, index){\n    const option = document.createElement(\"option\");\n    option.value = index;\n    option.text = country.name;\n    this.selectElement.appendChild(option);\n}\n\nCountrySelectView.prototype.setSelectedIndex = function(index){\n    this.selectElement.selectedIndex = index;\n}\n\nmodule.exports = CountrySelectView;\n","const CountryList = function(url) {\n  this.countries = [];\n  this.onUpdate = null;\n  this.url = url;\n};\n\nCountryList.prototype.populate = function(){\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", this.url);\n    request.onload = function() {\n        if (request.status === 200) {\n            const jsonString = request.responseText;\n            const countries = JSON.parse(jsonString);\n            this.countries = countries;\n            this.onUpdate(countries);\n        }\n    }.bind(this);\n    request.send(null);\n}\nCountryList.prototype.addCountry = function(country){\n    this.countries.push(country);\n    this.onUpdate(this.countries);\n    //persist\n    const request = new XMLHttpRequest();\n    request.open(\"POST\", this.url);\n    request.setRequestHeader(\"Content-Type\", \"application/json\");\n    request.onload = function() {\n      if(request.status === 200) {\n      }\n    };\n    request.send( JSON.stringify( {country: country} ) );\n}\nmodule.exports = CountryList;\n","const CountryDetailView = function(element) {\n  this.element = element;\n  this.onAdd = console.log;\n};\n\nCountryDetailView.prototype.render = function(country){\n    const tags = this.element.querySelectorAll('p');\n    tags[0].innerText = country.name;\n    tags[1].innerText = country.population;\n    tags[2].innerText = country.capital;\n    const addButton = this.element.querySelector('#add-button');\n    addButton.addEventListener('click', function() {\n      this.onAdd(country);\n    }.bind(this));\n}\n\nmodule.exports = CountryDetailView;\n","const BucketListView = function(listElement) {\n  this.listElement = listElement;\n  this.onChange = undefined;\n  this.countries = [];\n};\n\nBucketListView.prototype.render = function(countries){\n    this.listElement.innerHTML = \"\";\n    this.countries = countries;\n    this.countries.forEach(function(country) {\n      this.addItem(country);\n    }.bind(this));\n}\n\nBucketListView.prototype.addItem = function(country, index){\n    const li = document.createElement(\"li\");\n    li.innerHTML = country.name;\n    this.listElement.appendChild(li);\n}\n\n\nmodule.exports = BucketListView;\n","const CountriesSelectView = require('./views/countries_select_view');\nconst BucketListView = require('./views/bucket_list_view');\nconst CountryDetailView = require('./views/country_detailed_view');\nconst CountrySelectView = require('./views/countries_select_view');\n\nconst CountryList = require('./models/country_list');\n\n\nconst app = function(){\n  //setup views\n  const countriesSelectView = new CountriesSelectView(document.querySelector('#countries'));\n  const countryDetailView = new CountryDetailView(document.querySelector('#info'));\n  const bucketListView = new BucketListView(document.querySelector('#bucket-list'));\n\n  //link change on select to update detail view and persist last country\n  countriesSelectView.onChange = function(country) {\n    countryDetailView.render(country);\n  };\n\n  //setup country list model\n  const world = new CountryList('https://restcountries.eu/rest/v1');\n  const bucketList = new CountryList('http://localhost:3000/bucketList');\n\n  //update views on data update\n  world.onUpdate = function(countries) {\n    countriesSelectView.render(countries);\n  };\n\n  bucketList.onUpdate = function(countries) {\n    bucketListView.render(countries);\n  };\n\n  countryDetailView.onAdd = function(country) {\n    bucketList.addCountry(country);\n  };\n\n  //get data from server\n  world.populate();\n  bucketList.populate();\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", app)\n"],"sourceRoot":""}